"use strict";(self.webpackChunkiframe_api_docs=self.webpackChunkiframe_api_docs||[]).push([[6834],{34647:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"backend/sign","title":"Request signature","description":"Before sending a response to a request, your service must check the validity of","source":"@site/get-started/backend/sign.mdx","sourceDirName":"backend","slug":"/backend/sign","permalink":"/iframe-doc/backend/sign","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Request signature","sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Transactions","permalink":"/iframe-doc/backend/payments"},"next":{"title":"Payment limits","permalink":"/iframe-doc/backend/limits"}}');var a=t(74848),s=t(28453);const r={title:"Request signature",sidebar_position:3},d=void 0,o={},c=[{value:"<code>time</code>",id:"time",level:3},{value:"<code>sign</code>",id:"sign",level:3},{value:"Checking the time and signature of the request",id:"checking-the-time-and-signature-of-the-request",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Before sending a response to a request, your service must check the validity of\nthe signature ",(0,a.jsx)(n.code,{children:"sign"})," and the creation time ",(0,a.jsx)(n.code,{children:"time"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"time",children:(0,a.jsx)(n.code,{children:"time"})}),"\n",(0,a.jsxs)(n.p,{children:["Equals the number of seconds since UnixEpoch (January 1 1970 00:00:00 GMT).\nIf the time from the creation of the request to its verification is more than 10\nseconds, the request is considered invalid. The response with ",(0,a.jsx)(n.code,{children:"errorCode: 4"}),"\nmust be returned."]}),"\n",(0,a.jsx)(n.h3,{id:"sign",children:(0,a.jsx)(n.code,{children:"sign"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import base64\nimport hashlib\nimport json\n\n# Example request data\ndata = {\n    "type": "payment",\n    "token2": "abc",\n    "time": 485172195,\n    "Info": \'[{"EventName":"Transaction A","DateStart":1538609400,"Category":"Category Name"}]\',\n    "amount": "10",\n}\n\n# Secret key\nSECRET = "SECRET"\n\n# Convert data to JSON and concatenate with SECRET\nserialized_data = json.dumps(data, separators=(",", ":"))\ndata_to_sign = serialized_data + SECRET\n\n# Calculate MD5 hash and encode in Base64\nmd5_hash = hashlib.md5(data_to_sign.encode(\'utf-8\')).digest()\nsign = base64.b64encode(md5_hash).decode(\'utf-8\')\n\nprint("Signature:", sign)\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This example demonstrates how to calculate the ",(0,a.jsx)(n.code,{children:"sign"})," field. The signature must be validated by the recipient's server to confirm the integrity and authenticity of the request."]}),"\n",(0,a.jsx)(n.h2,{id:"checking-the-time-and-signature-of-the-request",children:"Checking the time and signature of the request"}),"\n",(0,a.jsx)(n.p,{children:"On the side of your service, the following mechanism must be implemented:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import base64\nimport hashlib\nimport json\n\n# Example request data (received from client)\nreceived_data = {\n    "type": "payment",\n    "token2": "abc",\n    "time": 485172195,\n    "Info": \'[{"EventName":"Transaction A","DateStart":1538609400,"Category":"Category Name"}]\',\n    "amount": "10",\n    "sign": "EXPECTED_SIGNATURE",  # Replace with the signature received in the request\n}\n\n# Secret key\nSECRET = "SECRET"\n\n# Extract and remove the signature from the request\nreceived_sign = received_data.pop("sign")\n\n# Serialize data and append SECRET\nserialized_data = json.dumps(received_data, separators=(",", ":"))\ndata_to_sign = serialized_data + SECRET\n\n# Recalculate the signature\nmd5_hash = hashlib.md5(data_to_sign.encode(\'utf-8\')).digest()\ncalculated_sign = base64.b64encode(md5_hash).decode(\'utf-8\')\n\n# Validate the signature\nif calculated_sign == received_sign:\n    print("Signature is valid.")\nelse:\n    print("Signature is invalid.")\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The process ensures the integrity and authenticity of the request by verifying the ",(0,a.jsx)(n.code,{children:"sign"})," field. If the signature matches, the request is valid. Otherwise, it should be rejected."]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(96540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);